#Optional type deceleration::
===========================::
							 In java 8 if we do not declare the variable with type in lambda expression, compiler will
pick the data type from the value of the parameter. for Example please see the OptionalDecleration class.

Following are the important characteristics of a lambda expression.

1)    Optional type declaration 
	  ==========================:
   						 No need to declare the type of a parameter. The compiler can inference the same from the value of the parameter.

2)  Optional parenthesis around parameter 
	=====================================:
								 No need to declare a single parameter in parenthesis. For multiple parameters, parentheses are required.

3) Optional curly braces 
   =====================:
						No need to use curly braces in expression body if the body contains a single statement.
						
4)  Optional return keyword
=======================:    
						The compiler automatically returns the value if the body has a single expression to return the value. Curly braces are required to indicate that 
						expression returns a value.

						
        ######################################### Method Reference  #######################################
--> Method references help to point to methods by their names. A method reference is described using "::" symbol. A method 
reference can be used to point the following types of methods:

1) Static methods -->e.g check MethodReference Class
2)  Instance methods -->e.g check MethodReference class, i put comments on it --> reference to non static method
3)  Constructors using new operator (TreeSet::new) -->  e.g check MethodReference class, i put comments on it --> reference to constructor
        